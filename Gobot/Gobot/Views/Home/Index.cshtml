@model Gobot.Models.LoginViewModel

@{
    ViewBag.Title = "Connection";
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>@ViewBag.Title - Gobotter</title>
    <link href='https://fonts.googleapis.com/css?family=Lato:400,300,700,900,900italic,300italic,400italic,700italic' rel='stylesheet' type='text/css'>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
    @Scripts.Render("~/bundles/modernizr")
    @Styles.Render("~/Content/Home.min.css")
</head>
<body>
    <noscript id="js_error">
        <div>
            <div id="error_overlay_image"></div>
            <h1>Gobot nécéssite Javascript pour fonctionner corretement. Veuillez l'activer pour pouvoir profiter du contenu de Gobot.com.</h1>
            <a href="http://enable-javascript.com/fr/" target="_blank">Comment activer mon Javascript?</a>
        </div>
    </noscript>
    <div id="header">
        <div id="sub">
            <h1>VOUS N'ÊTES PAS CONNECTÉ.</h1>
            <h2>
                Connectez-vous pour profiter de tout les fonctionnalités de Gobot. Si vous n'avez pas de compte, <a href="@Url.Action("Register", "Account")">créez-le</a>, ça prend moins d'une minute et c'est gratuit!
            </h2>
            <a href="@Url.Action("Register", "Account")">S'INSCRIRE</a>
            <div class="separator">
                <div class="line"></div>
                <div class="diamond"></div>
            </div>
        </div>
        <div id="login">
            @using (Html.BeginForm())
{
                <div class="left">
                    <div id="username">
                        @Html.LabelFor(model => model.Username)

                        @Html.EditorFor(model => model.Username)
                        @Html.ValidationMessageFor(model => model.Username)
                    </div>
                    <div id="password">
                        @Html.LabelFor(model => model.Password)

                        @Html.EditorFor(model => model.Password)
                        @Html.ValidationMessageFor(model => model.Password)
                    </div>
                </div>
                <div class="right">
                    <div id="signIn_cont">
                        <div id="signIn_circle">
                            <canvas id="canvas"></canvas>
                            <input type=submit value="" />
                        </div>
                        <input id="signIn_rect" type="submit" value="Connexion">
                        <div id="signIn_border"><p></p></div>
                    </div>
                </div>
            }
        </div>
    </div>

    <div id="main">
        <div class="side ct">
            <img src="~/Images/ct_side.png" />
            <h1>CLOUD6@{/*((Newtonsoft.Json.Linq.JObject)ViewBag.LiveStats)[0]["TeamName"].ToObject<string>()*/}</h1>
            <h2><b class="green">@{/*@((Newtonsoft.Json.Linq.JObject)ViewBag.LiveStats)[0]["Wins"].ToObject<string>()*/}</b> <img src="~/Images/games_won.png" /> <b class="white">@{/*@((Newtonsoft.Json.Linq.JObject)ViewBag.LiveStats)[0]["Games"].ToObject<string>()*/}</b> <img src="~/Images/games_played.png" /></h2>
            <h2></h2>

            <div class="team">
                <div class="names">
                    <span>Albert@{/*@((Newtonsoft.Json.Linq.JObject)ViewBag.LiveStats)[0]["Bot1"]["BotName"].ToObject<string>()*/}</span>
                    <span>Cecil@{/*@((Newtonsoft.Json.Linq.JObject)ViewBag.LiveStats)[0]["Bot2"]["BotName"].ToObject<string>()*/}</span>
                    <span>Elliot@{/*@((Newtonsoft.Json.Linq.JObject)ViewBag.LiveStats)[0]["Bot3"]["BotName"].ToObject<string>()*/}</span>
                    <span>Marvin@{/*@((Newtonsoft.Json.Linq.JObject)ViewBag.LiveStats)[0]["Bot4"]["BotName"].ToObject<string>()*/}</span>
                    <span>Fergus@{/*@((Newtonsoft.Json.Linq.JObject)ViewBag.LiveStats)[0]["Bot5"]["BotName"].ToObject<string>()*/}</span>
                </div>
                <div class="roles">
                    <span>Rifle@{/*@((Newtonsoft.Json.Linq.JObject)ViewBag.LiveStats)[1]["Bot1"]["BotName"].ToObject<string>()*/}</span>
                    <span>Sniper@{/*@((Newtonsoft.Json.Linq.JObject)ViewBag.LiveStats)[1]["Bot2"]["BotName"].ToObject<string>()*/}</span>
                    <span>Rifle@{/*@((Newtonsoft.Json.Linq.JObject)ViewBag.LiveStats)[1]["Bot3"]["BotName"].ToObject<string>()*/}</span>
                    <span>Shotgun@{/*@((Newtonsoft.Json.Linq.JObject)ViewBag.LiveStats)[1]["Bot4"]["BotName"].ToObject<string>()*/}</span>
                    <span>rifle@{/*@((Newtonsoft.Json.Linq.JObject)ViewBag.LiveStats)[1]["Bot5"]["BotName"].ToObject<string>()*/}</span>
                </div>
            </div>
        </div>
        <div id="video">
            <iframe src="https://player.twitch.tv/?channel=gobotts" frameborder="0" scrolling="no" height="378" width="620"></iframe>
        </div>
        <div class="side t">
            <img src="~/Images/t_side.png" />
            <h1>CLOUD6</h1>
            <h2><b class="green">49</b> <img src="~/Images/games_won.png" /> <b class="white">90</b> <img src="~/Images/games_played.png" /></h2>

            <div class="team">
                <div class="names">
                    <span>Albert</span>
                    <span>Cecil</span>
                    <span>Elliot</span>
                    <span>Marvin</span>
                    <span>Fergus</span>
                </div>
                <div class="roles">
                    <span>Rifle</span>
                    <span>Sniper</span>
                    <span>Rifle</span>
                    <span>Shotgun</span>
                    <span>rifle</span>
                </div>
            </div>
        </div>
    </div>

    <script>
        //#region Animation variables
        var canvas = document.getElementById('canvas');
        var context = canvas.getContext('2d');
        context.fillStyle = '#f67763';
        context.lineWidth = 1;
        context.strokeStyle = '#cf513f';
        var x = canvas.width / 2;
        var y = canvas.height / 2;
        var radius = canvas.width / 4;
        var curPerc = 0;
        var circ = Math.PI * 2;
        var quart = Math.PI;
        var lastOver;
        //#endregion Animation variables
        var originalForm;

        (function () {
            var requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame ||
                                        window.webkitRequestAnimationFrame || window.msRequestAnimationFrame;
            window.requestAnimationFrame = requestAnimationFrame;

            $(".single-line").removeClass("single-line");
            $(".text-box").removeClass("text-box");
            $("#username > input, #password > input").addClass("type");

            originalForm = $('#login')[0].outerHTML;

            onResize();

            if ($(window).width() <= 932) {
                addPopOutLogin();

                if ($('#popOut_login > form > span.field-validation-error').length == 0)
                    $("#popOut_login").remove();
            }

            $(document).on('click', '#popOut_login > form > img', function () {
                $("#popOut_login").remove();
            });

            $(document).on('click', '#login > button', function () {
                addPopOutLogin();
            });
        })();

        $(window).resize(function () {
            onResize();
        });

        //#region animation

        function animate(current) {
            context.clearRect(0, 0, canvas.width, canvas.height);

            context.beginPath();
            context.ellipse(x, y, radius * 2, radius, 0, -(quart), ((circ) * current) - quart);
            context.fill();
            context.stroke();

            var jump = 12;
            curPerc += jump;

            if (curPerc - jump < 100) {
                requestAnimationFrame(function () {
                    animate(curPerc / 100)
                });
            }
        }

        function resetAnimation() {
            curPerc = 0;
            context.clearRect(0, 0, canvas.width, canvas.height);
        }

        $("#signIn_rect, #signIn_circle > input").mouseenter(function () {
            if ($(window).width() > 1600) {
                if (lastOver.attr('id') != "signIn_rect" && lastOver.parent().attr('id') != "signIn_circle")
                    animate();

                lastOver = $(this);
            }
        }).mouseleave(function () {
            if ($(window).width() > 1600) {
                resetAnimation();
            }
        });
        $("#header").not("#signIn_circle > input, #signIn_rect").mouseover(function () {
            lastOver = $(this);
            resetAnimation();
        });
        //#endregion animation

        function onResize() {
            $("#main").height($(window).height() - $("#header").height());
            $("#signIn_cont").css("top", $("#header").height() / 2 - $("#signIn_cont").height() / 2);

            var mobileLoginHTML = "<button>Connexion</button>";
            if ($(window).width() > 932 && $("#login").html() == mobileLoginHTML) {
                addHeaderLogin();
                positionFormLabels();
            }
            else if ($("#login").html() != mobileLoginHTML && $(window).width() <= 932) {
                $("#login").empty();
                $("#login").append(mobileLoginHTML);
            }

            setVideoPos();
        }

        function setPopOutLogin() {
            let pos = $(window).height() / 2 - $("#popOut_login > form").outerHeight() / 2;
            $("#popOut_login").css("padding-top", pos <= 0 ? 0 : pos);

            $("#popOut_login > form > span").each(function () {
                if ($(this).hasClass("field-validation-error")) {
                    $(this).css("display", "block");
                    $(this).prev().css("border-color", "#963434");
                }
            });
        }

        function setVideoPos() {
            if ($(window).width() <= 1520) {
                if (!$("#video").is(':first-child'))
                    $(".ct").insertBefore(".t");

                $(".side").css("top", 0);
            }
            else {
                if ($("#video").is(':first-child'))
                    $(".ct").insertBefore("#video");

                $(".side").css("top", $("#main").height() / 2 - $(".side").height() / 2);
            }

            $(".side > img").css("left", $(".side").width() / 2 - $(".side > img").width() / 2);
        }

        function positionFormLabels() {
            if ($(window).width() <= 1600 && $(window).width() > 932) {
                var pos = parseInt(removePx($("#signIn_cont").css("top"))) - $("#username > label").height();
                $("#username > label, #password > label").css("margin-top", pos);
            }
            else
                $("#username > label, #password > label").css("margin-top", 24);
        }

        function addHeaderLogin() {
            if ($("#login > form").length == 0) {
                $("#login").remove();

                if ($("#popOut_login").length > 0)
                    $("#popOut_login").remove();
                $("#header").append(originalForm);
            }
        }

        function addPopOutLogin() {
            if ($("#popOut_login").length == 0) {
                var formHTML = $('<div/>').html(originalForm).contents();
                var user = formHTML.find("#username").html();
                var pwd = formHTML.find("#password").html();
                var popOutLogin = '<div id="popOut_login"><form action="/" method="post">' + user + pwd + '<input type="submit" value="Connexion"/><img src="/Images/close.png" alt="Fermer"/></form></div>';
                $("body").prepend(popOutLogin);

                setPopOutLogin();
            }
        }

        function removePx(s) {
            return s.substring(0, s.indexOf('px'));
        }

        $("#popOut_login > form > input").focus(function () {
            $(this).prev().css("color", "#f16651");
        }).blur(function () {
            $(this).prev().css("color", "#626262");
        });
    </script>
</body>
</html>