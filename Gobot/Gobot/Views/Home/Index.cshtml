@{
    ViewBag.Title = "Home";
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>@ViewBag.Title - Gobotter</title>
    <link href='https://fonts.googleapis.com/css?family=Lato:400,300,700,900,900italic,300italic,400italic,700italic' rel='stylesheet' type='text/css'>
    <script src="http://ajax.microsoft.com/ajax/jquery/jquery-1.4.2.js" type="text/javascript"></script>
    @Scripts.Render("~/bundles/modernizr")
    @Styles.Render("~/Content/Home.min.css")
</head>
<body>
    <div id="header">
        <div id="sub">
            <h1>VOUS ÊTES DÉCONNECTÉS.</h1>
            <h2>
                Connectez-vous pour profiter de tout les fonctionnalités de Gobot. Si vous n'avez pas de compte, <a href="#">créez-le</a>, ça prend moins d'une minute et c'est gratuit!
            </h2>
            <a href="#">S'INSCRIRE</a>
            <div class="separator">
                <div class="line"></div>
                <div class="diamond"></div>
            </div>
        </div>
        <div id="login">
            @using (Html.BeginForm())
            {
                <div class="left">
                    <div id="username">
                        <label>Nom d'utilisateur</label>
                        <input type="text" class="type" />
                        @*@Html.LabelFor(model => model.UserName, new { @class = "control-label col-md-2" })*@

                        @*@Html.EditorFor(model => model.UserName)
                            @Html.ValidationMessageFor(model => model.UserName)*@
                    </div>
                    <div id="password">
                        <label>Mot de passe</label>
                        <input type="password" class="type" />
                        @*@Html.LabelFor(model => model.UserName, new { @class = "control-label col-md-2" })*@

                        @*@Html.EditorFor(model => model.UserName)
                            @Html.ValidationMessageFor(model => model.UserName)*@
                    </div>
                </div>
                <div class="right">
                    <div id="signIn_cont">
                        <div id="signIn_circle">
                            <canvas id="canvas"></canvas>
                            <input type=submit value="" />
                        </div>
                        <input id="signIn_rect" type="submit" value="Connexion">
                        <div id="signIn_border"><p></p></div>
                    </div>
                </div>
            }
            <div></div>
        </div>
    </div>

    <div id="main">
        <div class="side ct">
            <img src="~/Images/ct_side.png" />
            <h1>CLOUD6</h1>
            <h2><b class="green">49</b> <img src="~/Images/games_won.png" /> <b class="white">90</b> <img src="~/Images/games_played.png" /></h2>
            <h2></h2>

            <div class="team">
                <div class="names">
                    <span>Albert</span>
                    <span>Cecil</span>
                    <span>Elliot</span>
                    <span>Marvin</span>
                    <span>Fergus</span>
                </div>
                <div class="roles">
                    <span>Rifle</span>
                    <span>Sniper</span>
                    <span>Rifle</span>
                    <span>Shotgun</span>
                    <span>rifle</span>
                </div>
            </div>
        </div>
        <div id="video">
            <iframe src="https://player.twitch.tv/?channel=esl_csgo" frameborder="0" scrolling="no" height="378" width="620"></iframe>
        </div>
        <div class="side t">
            <img src="~/Images/t_side.png" />
            <h1>CLOUD6</h1>
            <h2><b class="green">49</b> <img src="~/Images/games_won.png" /> <b class="white">90</b> <img src="~/Images/games_played.png" /></h2>

            <div class="team">
                <div class="names">
                    <span>Albert</span>
                    <span>Cecil</span>
                    <span>Elliot</span>
                    <span>Marvin</span>
                    <span>Fergus</span>
                </div>
                <div class="roles">
                    <span>Rifle</span>
                    <span>Sniper</span>
                    <span>Rifle</span>
                    <span>Shotgun</span>
                    <span>rifle</span>
                </div>
            </div>
        </div>
    </div>


    <script>
        (function () {
            var requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame ||
                                        window.webkitRequestAnimationFrame || window.msRequestAnimationFrame;
            window.requestAnimationFrame = requestAnimationFrame;
        })();

        var canvas = document.getElementById('canvas');
        var context = canvas.getContext('2d');
        context.fillStyle = '#f67763';
        context.lineWidth = 1;
        context.strokeStyle = '#cf513f';
        var x = canvas.width / 2;
        var y = canvas.height / 2;
        var radius = canvas.width / 4;
        var curPerc = 0;
        var circ = Math.PI * 2;
        var quart = Math.PI;
        var lastOver;

        function animate(current) {
            context.clearRect(0, 0, canvas.width, canvas.height);

            context.beginPath();
            context.ellipse(x, y, radius * 2, radius, 0, -(quart), ((circ) * current) - quart);
            context.fill();
            context.stroke();

            var jump = 12;
            curPerc += jump;

            if (curPerc - jump < 100) {
                requestAnimationFrame(function () {
                    animate(curPerc / 100)
                });
            }
        }

        function resetAnimation() {
            curPerc = 0;
            context.clearRect(0, 0, canvas.width, canvas.height);
        }

        $("#signIn_rect, #signIn_circle > input").mouseenter(function () {
            if ($(window).width() > 1600) {
                if (lastOver.attr('id') != "signIn_rect" && lastOver.parent().attr('id') != "signIn_circle")
                    animate();

                lastOver = $(this);
            }
        }).mouseleave(function () {
            if ($(window).width() > 1600) {
                resetAnimation();
            }
        });

        $("#header").not("#signIn_circle > input, #signIn_rect").mouseover(function () {
            lastOver = $(this);
            resetAnimation();
        });

        $(document).ready(function () {
            onResize();
        });

        $(window).resize(function () {
            onResize();
        });

        function onResize() {
            $("#main").height($(window).height() - $("#header").height());
            $("#signIn_cont").css("top", $("#header").height() / 2 - $("#signIn_cont").height() / 2);

            if ($(window).width() <= 1520) {
                if (!$("#video").is(':first-child'))
                    $("#video").prependTo("#main");

                $(".side").css("top", 0);
            }
            else {
                if ($("#video").is(':first-child')) 
                    $("#video").insertBefore(".t");

                $(".side").css("top", $("#main").height() / 2 - $(".side").height() / 2);
            }

            if ($(window).width() <= 1600) {
                var pos = parseInt(removePx($("#signIn_cont").css("top"))) - $("#username > label").height();
                $("#username > label, #password > label").css("margin-top", pos);
            }
            else
                $("#username > label, #password > label").css("margin-top", 24);

            $(".side > img").css("left", $(".side").width() / 2 - $(".side > img").width() / 2);
        }

        function removePx(s) {
            return s.substring(0, s.indexOf('px'));
        }
    </script>
</body>
</html>