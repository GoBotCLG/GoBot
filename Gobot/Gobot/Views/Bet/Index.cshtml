@model List<Gobot.Models.Match>

@{
    ViewBag.Title = "Gager";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Styles.Render("~/Content/Bet.min.css")

@{
    if (ViewBag.Error != null && ViewBag.Error != "")
    {
        <div id="error_overlay">
            <div>
                <div id="error_overlay_image"></div>
                <h1>@ViewBag.Error</h1>
                <button id="close_errorOverlay">Fermer</button>
            </div>
        </div>
    }
}

<div class="info_container">
    @{
        if (Model.Count() > 0)
        {
            <div class="info" id="header">
                <h6>Misez sur les parties à venir!</h6>
            </div>
        }
        else
        {
            <div class="info" id="header">
                <h6>Aucune partie à venir. Réessayez plus tard.</h6>
            </div>
        }
    }

    <div class="info" id="getCredits">
        <a href="#"><h1>Acheter plus de crédits</h1></a>
        <div class="separator"><div></div></div>
        <a href="#"><h1>Visionner une publicité</h1></a>
    </div>

    @{
        if (Model.Count() > 0)
        {
            for (int i = 0; i < Model.Count; i++)
            {
                <div class="info">
                    <div class="time sqr"><h3>@Model[i].Date.Hour:@Model[i].Date.Minute</h3></div>

                    <div class="team team1">
                        <div class="img" style="background-image: url(/Images/@(Model[i].Teams[0].ImagePath));"></div>
                        <div class="text">
                            @{
                                if (Model[i].CurrentUserBet && Model[i].TeamNumberBet == 1)
                                {
                                    <h1><green>@(Model[i].Teams[0].Name.ToUpper())</green></h1>
                                    <h4 class="grey">Mise Totale<green> @(Model[i].Team1TotalBet)</green>GC</h4>
                                    <h4 class="grey">Votre mise<green> @(Model[i].CurrentUserAmount)</green>GC</h4>
                                }
                                else
                                {
                                    <h1>@(Model[i].Teams[0].Name.ToUpper())</h1>
                                    <h4 class="grey">Mise Totale<offw> @(Model[i].Team1TotalBet)</offw>GC</h4>
                                }
                            }
                        </div>
                        <input type="hidden" name="teamId" value="@(Model[i].Teams[0].Id)" />
                    </div>
                    <div class="vs"><h1>VS</h1></div>
                    <div class="manageBet">
                        @{
                            if (Model[i].CurrentUserBet)
                            {
                                <div class="remove sqr"><a href="@Url.Action("Remove", "Bet", new { tId = Model[i].Teams[Model[i].TeamNumberBet - 1].Id, mId = Model[i].Id })"></a><div><h2>Retirer</h2></div></div>
                                <div class="edit sqr"><div><h2>Modifier</h2></div></div>
                            }
                            else
                            {
                                <div class="create sqr"><div><h2>Miser</h2></div></div>
                            }
                        }
                    </div>
                    <div class="team team2">
                        <div class="img" style="background-image: url(/Images/@(Model[i].Teams[1].ImagePath));"></div>
                        <div class="text">
                            @{
                                if (Model[i].CurrentUserBet && Model[i].TeamNumberBet == 2)
                                {
                                    <h1><green>@(Model[i].Teams[1].Name.ToUpper())</green></h1>
                                    <h4 class="grey">Mise Totale<green> @(Model[i].Team2TotalBet)</green>GC</h4>
                                    <h4 class="grey">Votre mise<green> @(Model[i].CurrentUserAmount)</green>GC</h4>
                                }
                                else
                                {
                                    <h1>@(Model[i].Teams[1].Name.ToUpper())</h1>
                                    <h4 class="grey">Mise Totale<offw> @(Model[i].Team2TotalBet)</offw>GC</h4>
                                }
                            }
                        </div>
                        <input type="hidden" name="teamId" value="@(Model[i].Teams[1].Id)" />
                    </div>
                    <input name="matchId" type="hidden" value="@(Model[i].Id)" />
                </div>
            }
        }
    }
</div>

@section Scripts {
    <script>
        $(function () {
            onResize();
        });

        $(window).resize(function () {
            onResize();
        });

        $(".manageBet > div").mouseenter(function () {
            $(this).find("> div").css("left", -($(this).find("> div").find("h2").outerWidth()));
        });
        $(".manageBet > .edit").mouseenter(function () {
            $(this).prev().css("left", -($(this).find("> div").find("h2").outerWidth()));
        }).mouseleave(function () {
            $(".manageBet > .remove").css("left", 0);
        });

        $(document).on("click", ".manageBet > .create", function () {
            $("#bet_chooseTeam").remove();
            $("#bet_placeBet").remove();

            var teamNames = [];
            $(this).closest('.info').find(' > .team > .text > h1').each(function () { teamNames.push($(this).text()); });

            $('<div class="info" id="bet_chooseTeam"></div>').insertAfter($(this).closest(".info"));
            $("#bet_chooseTeam").append('<div style="background-image:url(' + getBackgroundImage($(this).closest(".info").find(".team1 > .img")) + ');"><h1>' + teamNames[0].toUpperCase() + '</h1></div>');
            $("#bet_chooseTeam").append('<div class="separator"><div class="square"></div></div>');
            $("#bet_chooseTeam").append('<div style="background-image:url(' + getBackgroundImage($(this).closest(".info").find(".team2 > .img")) + ');"><h1>' + teamNames[1].toUpperCase() + '</h1></div>');
            onResize();
        });

        function getBackgroundImage(div)
        {
            var bg = div.css('background-image');
            bg = bg.replace('url(', '').replace(')', '').replace(/\"/gi, "");
            return bg;
        }

        $(".manageBet > .edit").click(function () {
            let teams = $(this).closest(".info").find("> .team");
            var teamId;
            var teamNum = 1;
            var matchId = $(this).closest(".info").find("> input").val();
            var imagePath;

            var i = 1;
            teams.each(function () {
                let count = $(this).find("h4").length;
                if (count == 2) {
                    teamNum = i;
                    imagePath = getBackgroundImage($(this).find("> .img"));
                    teamId = $(this).find("input").val();
                }
                i++;
            });


            createBetForm($(this).closest(".info"), teamId, matchId, teamNum, imagePath);

            var toAdd = $(this).closest(".info").find(".team" + teamNum + " > .text > h4:last-of-type > green").text();
            changeBetValue($(".betSelector > .add"), parseInt(toAdd));
            onResize();
        });

        $(document).on("click", "#bet_chooseTeam > div:not(.separator)", function () {
            let selectedTeam = $(this).is(':first-child') ? 1 : 2;
            //let teamName = $(this).find("> h1").text();
            let imagePath = getBackgroundImage($(this));
            let teamId = $(this).parent().prev().find(".team" + selectedTeam + "> input").attr("value");
            let matchId = $(this).parent().prev().find("> input").attr("value");

            createBetForm($(this).parent(), teamId, matchId, selectedTeam, imagePath);
        });

        $(document).on("click", ".betSelector > .sub", function () {
            changeBetValue($(this), -1);
        });
        $(document).on("click", ".betSelector > .add", function () {
            changeBetValue($(this), 1);
        });
        $(document).on("input", ".betSelector > input", function () {
            changeCoinsValue();

            $(this).attr("value", $(this).val());
            changeSubmit();
        });
        $(document).on("keypress", ".betSelector > input", function (e) {
            if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57))
                return false;
        });

        function changeSubmit() {
            var pos = $("#bet_placeBet > .teamImg").is(':first-child') ? 1 : 2;
            if (parseInt($(".remainGC").text()) < 0 && $("#bet_placeBet > form > a").length == 0) {
                $("#bet_placeBet > form > input").remove();
                $("#bet_placeBet > form").append('<a class="' + (pos == 1 ? 'right' : 'left') + '" href="#">Ajouter des crédits</a>');
            }
            else if (parseInt($(".remainGC").text()) >= 0 && $("#bet_placeBet > form > input").length == 0) {
                $("#bet_placeBet > form > a").remove();
                $("#bet_placeBet > form").append('<input class="' + (pos == 1 ? 'right' : 'left') + '" type="submit" value="Confirmer"></input>');
            }
        }
        function changeCoinsValue() {
            var deduct = $(".betSelector > input").val();
            $(".deductGC").text(deduct.length == 0 ? 0 : deduct);
            $(".remainGC").text(parseInt($(".baseGC").text()) - $(".betSelector > input").val());
            posCreditsInfo();
            changeSubmit();
        }
        function changeBetValue(e, change) {
            var input = e.parent().find("input");
            var val = input.attr("value").length == 0 ? 0 : parseInt(input.attr("value"));
            var max = parseInt(e.closest("form").find(".baseGC").text());

            if (change < 0 ? val > 0 : val < parseInt(input.attr("max"))) {
                input.attr("value", (val + change).toString());
                input.val((val + change).toString());
            }

            changeCoinsValue();
        }

        function createBetForm(e, teamId, matchId, pos, imagePath) {
            $("#bet_placeBet").remove();
            $('<div class="info" id="bet_placeBet"></div>').insertAfter(e);
            $("#bet_chooseTeam").remove();

            if (pos == 1) {
                $("#bet_placeBet").append('<div class="teamImg left" style="background-image: url(' + imagePath + ')"></div>');
                $("#bet_placeBet").append('<div class="separator left"><div class="square"></div></div>');
            }

            $("#bet_placeBet").append('<form action="@(Url.Action("Add", "Bet"))" method="post"></form>');
            $('#bet_placeBet > form').append('<input type="hidden" name="teamId" value="' + teamId + '"/>');
            $('#bet_placeBet > form').append('<input type="hidden" name="matchId" value="' + matchId + '"/>');
            $("#bet_placeBet > form").append('<div><h2>Crédits disponibles</h2><h2><white class="baseGC">' + @(((Gobot.Models.User)Session["User"]).Credits) + '</white> <orange>GC</orange></h2></div>'); // Available credits
            $("#bet_placeBet > form").append('<div><h2>-</h2><h2><red class="deductGC">0</red> <orange style="visibility: hidden;">GC</orange></h2></div>'); // Deducted credits
            $("#bet_placeBet > form").append('<div><h2>=</h2><h2><white class="remainGC">0</white> <orange>GC</orange></h2></div>'); // Remaining credits
            $("#bet_placeBet > form").append('<div class="betSelector"></div>');
            $("#bet_placeBet > form > .betSelector").append('<div class="sub"></div><input type="number" name="Amount" value="0" max="9999999" step="1"/><div class="add"></div>');
            $("#bet_placeBet > form").append('<input class="' + (pos == 1 ? 'right' : 'left') + '" type="submit" value="Confirmer"></input>');

            if (pos == 2) {
                $("#bet_placeBet").append('<div class="teamImg" style="background-image: url(' + imagePath + ')"></div>');
                $("#bet_placeBet").append('<div class="separator right"><div class="square"></div></div>');
            }

            onResize();
            posCreditsInfo();
        }

        function onResize() {
            resizeInfo();
            h_align_window($(".info_container"));
            h_align_margin($(".betSelector"), $("#bet_placeBet > form"), getWidthOfChilds($(".betSelector")));

            $(".info > div").each(function () {
                if ($(this).children().children().length > 0 && $(this).children().height() == $(this).height())
                    v_align($(this).children().children(), $(this), getHeightOfChilds($(this).children()));
                else
                    v_align($(this).children(), $(this), getHeightOfChilds($(this)))
            });
        }

        function resizeInfo() {
            $(".info").each(function () {
                let total = 0;

                $(this).find("> div").each(function () {
                    if (!$(this).hasClass("team"))
                        total += $(this).width();
                });

                $(this).find(".team").css("width", ($(".info").width() - total) / 2);
            });
        }

        function posCreditsInfo() {
            var s = "#bet_placeBet > form > div > h2:last-of-type";

            $(s).css("width", "auto");
            var longest = 0;
            $(s).each(function () {
                if ($(this).width() > longest)
                    longest = $(this).width();
            });

            $(s).css("width", longest);

            if (parseInt($(".remainGC").text()) < 0)
                $(".remainGC").addClass("red");
            else
                $(".remainGC").removeClass("red");
        }
    </script>
}