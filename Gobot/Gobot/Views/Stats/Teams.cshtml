@model IEnumerable<Gobot.Models.Team>

@{
    ViewBag.Title = "Équipes";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Styles.Render("~/Content/Teams.min.css")

<div class="info_container">
    <div class="info" id="header">
        <h6>Équipes</h6>
    </div>
</div>

<div class="teams">
    @{
        foreach (Gobot.Models.Team team in (List<Gobot.Models.Team>)Model)
        {
            <div class="team" id="@team.Id" style="background-image: url(/Images/@(team.ImagePath));">
                <div class="overlay"><h1>@team.Name</h1></div>
            </div>
        }
    }
</div>

@section Scripts {
    <script>
        $(function () {
            onResize();

            $(".overlay > h1").each(function () {
                var pos = $(".team:first-of-type").height() / 2 - $(this).height() / 2;
                $(this).css("top", pos);
            });
        });

        $(window).resize(function () {
            onResize();
        });

        $(document).on("click", ".team", function () {
            insertTeamInfo($(this));
        });

        function onResize() {
            setWidthFromChilds($(".team"), 5);
            h_align_window($(".info_container"));
        }

        function insertTeamInfo(e) {
            var clicked = $(".team").index(e) + 1;
            var eRow = getElemPerRows($(".teams"));

            var totalE = $(".team").length;
            var insertAfter = eRow * Math.floor(clicked % eRow == 0 ? clicked / eRow : clicked / eRow + 1);
            if (insertAfter > totalE)
                insertAfter = totalE;

            $(".team_info").remove();
            $(".triangle").remove();
            $(".allow_overflow").each(function () { $(this).removeClass("allow_overflow"); });
            createTeamInfo(e.attr("id"), $(".teams > :nth-child(" + insertAfter + ")"));

            $(".team_info").css({
                "width": $(".teams").width() - (eRow + 1),
                "top": -(Math.floor(clicked / eRow) + (clicked % eRow == 0 ? 0 : 1))
            });
            h_align($(".players"), $(".team_info"), $(".players").width());
            e.append('<div class="triangle"></div>');
            e.addClass("allow_overflow");
            $('html,body').animate({ scrollTop: $(".team_info").offset().top - 10 }, 'normal');
        }
        function createTeamInfo(teamId, prev) {
            var data = new XMLHttpRequest();
            data.open("GET", '@Url.Action("Team", "Stats")/' + teamId, false);

            data.onreadystatechange = function () {
                if (data.readyState == 4) {
                    var team = JSON.parse(data.response);

                    $('<div class="team_info h"></div>').insertAfter(prev);
                    $(".team_info").append("<div><h6>" + team.name + "</h6></div>");
                    $(".team_info > div").append('<div class="team_matches"></div>');
                    $(".team_matches").append('<h2 class="grey">' + team.wins + ' PARTIES GAGNÉES</h2>');
                    $(".team_matches").append('<h2 class="grey">' + (parseInt(team.games) - parseInt(team.wins)) + ' PERDUES</h2>');
                    $(".team_matches").append('<h2 class="grey">' + team.games + ' PARTIES JOUÉES</h2>');

                    $(".team_info").append('<div class="players"></div>');
                    for (let i = 0; i < team.players.length; i++) {
                        var gun = team.players[i].gun.toString().toLowerCase().replace(" ", "");
                        $(".players").append('<div class="player"><h1>' + team.players[i].name + '</h1></div>');
                        $(".player:last-child").append('<div><div class="gun" style="background-image:url(\'/Images/guns/' + gun + '.png\')"></div><h2 class="grey">' + team.players[i].gun + '</h2></div>');
                        $(".player:last-child").append('<div><div class="kd"></div><h2 class="grey">' + team.players[i].kd + '</h2></div>');
                    }
                    onResize();
                }
            }
            data.send();
        }

        function getElemPerRows(p) {
            return Math.floor(p.width() / p.find("> :nth-child(2)").outerWidth());
        }
    </script>
}